class ram_rd_agent extends uvm_agent;
	
	`uvm_component_utils(ram_rd_agent)	
	
	ram_rd_agent_config m_cfg;
	ram_rd_driver drv_h;
	ram_rd_sequencer seq_h;	
	ram_rd_monitor mon_h;
	
	extern function new(string name = "ram_rd_agent",uvm_component parent = null);
	extern function void build_phase(uvm_phase phase);
	extern function void connect_phase(uvm_phase phase);	
endclass

function ram_rd_agent::new(string name="ram_rd_agent",uvm_component parent=null);
	super.new(name,parent);
endfunction 

function void ram_rd_agent::build_phase(uvm_phase phase);
	super.build_phase(phase);
	
	if(!uvm_config_db #(ram_rd_agent_config)::get(this," ","ram_rd_agent_config",m_cfg))
		`uvm_fatal("CONFIG","cannot_get() m_cfg from uvm_config_db,ahve you set() it..?")
	
	mon_h=ram_rd_monitor::type_id::create("mon_h",this);
	
	if(m_cfg.is_active == UVM_ACTIVE)begin
		drv_h = ram_rd_driver::type_id::create("drv_h",this);	
		seq_h = ram_rd_sequencer::type_id::create("seq_h",this);
	end
endfunction

function void ram_rd_agent::connect_phase(uvm_phase phase);	

	if(m_cfg.is_active == UVM_ACTIVE)begin
		drv_h.seq_item_port.connect(seq_h.seq_item_export);
	end 
endfunction
